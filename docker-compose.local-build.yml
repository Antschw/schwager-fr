services:
  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: schwager-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=4000
    env_file:
      - ./backend/.env
    ports:
      - "4000:4000"
    volumes:
      # Persistent uploads storage
      - uploads_data:/app/public/uploads
    networks:
      - schwager-network
    healthcheck:
      test: ["CMD", "node", "-e", "const http = require('http'); const options = { hostname: 'localhost', port: 4000, path: '/api/auth/me', timeout: 2000 }; const req = http.request(options, (res) => { process.exit(res.statusCode === 200 || res.statusCode === 401 ? 0 : 1); }); req.on('error', () => process.exit(1)); req.on('timeout', () => process.exit(1)); req.end();"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: schwager-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - schwager-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  schwager-network:
    driver: bridge

volumes:
  uploads_data:
    driver: local