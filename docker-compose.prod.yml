services:
  # Database
  postgres:
    image: postgres:16
    container_name: schwager-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: auth_db_prod
      POSTGRES_USER: auth_user
      POSTGRES_PASSWORD: $$CPbVvWia6itv&dr35$$DU8cF9ueH*B
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - schwager-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U auth_user -d auth_db_prod"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    image: ghcr.io/antschw/schwager-backend:latest
    container_name: schwager-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=4000
    env_file:
      - ./backend/.env.production
    ports:
      - "4000:4000"
    volumes:
      # Persistent uploads storage
      - uploads_data:/app/public/uploads
    networks:
      - schwager-network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "-e", "const http = require('http'); const options = { hostname: 'localhost', port: 4000, path: '/api/healthcheck', timeout: 2000 }; const req = http.request(options, (res) => { process.exit(res.statusCode === 200 ? 0 : 1); }); req.on('error', () => process.exit(1)); req.on('timeout', () => process.exit(1)); req.end();"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend React App
  frontend:
    image: ghcr.io/antschw/schwager-frontend:latest
    container_name: schwager-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - schwager-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: schwager-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - uploads_data:/var/www/uploads:ro
    depends_on:
      - frontend
      - backend
    networks:
      - schwager-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  schwager-network:
    driver: bridge

volumes:
  uploads_data:
    driver: local
  postgres_data:
    driver: local